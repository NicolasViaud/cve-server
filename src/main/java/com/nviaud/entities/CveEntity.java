package com.nviaud.entities;

import com.fasterxml.jackson.annotation.JsonIgnore;
import io.quarkus.hibernate.reactive.panache.PanacheEntity;
import io.quarkus.panache.common.Page;
import io.quarkus.panache.common.Sort;
import io.smallrye.mutiny.Uni;

import javax.persistence.*;
import java.util.List;

@Entity
@Cacheable
@Table(name = "cve")
public class CveEntity extends PanacheEntity {

    @Column(length = 20, unique = true)
    public String name;

    @JsonIgnore
    @ManyToOne(fetch = FetchType.LAZY)
    public ProjectEntity project;

    public Impact impact;

    public String analysis;

    public String fixVersion;

    public static Uni<List<CveEntity>> findByProjectId(Long projectId){
        return list("project.id", Sort.by("name"), projectId);
    }

    public static Uni<List<CveEntity>> findByProjectId(Long projectId, Page page){
        return find("project.id", Sort.by("name"), projectId).page(page).list();
    }

    public static Uni<CveEntity> findByCveIdAndProjectIdAnd(Long cveId, Long projectId){
        return find("id = ?1 and project.id = ?2", Sort.by("name"), cveId, projectId).firstResult();
    }

}
