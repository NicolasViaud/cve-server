package com.nviaud.entities;

import com.fasterxml.jackson.annotation.JsonIgnore;
import io.quarkus.hibernate.reactive.panache.PanacheEntity;
import io.quarkus.panache.common.Sort;
import io.smallrye.mutiny.Uni;

import javax.persistence.*;
import java.util.List;

@Entity
@Cacheable
@Table(name = "release")
public class ReleaseEntity  extends PanacheEntity {

    public String version;

    @JsonIgnore
    @ManyToOne(fetch = FetchType.LAZY)
    public ProjectEntity project;

    @JsonIgnore
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "release")
    public List<AlertEntity> alerts;

    public static Uni<List<ReleaseEntity>> findByProjectId(Long projectId){
        return list("project.id", Sort.by("version"), projectId);
    }

    public static Uni<ReleaseEntity> findByComponentIdAndProjectIdAnd(Long releaseId, Long projectId){
        return find("id = ?1 and project.id = ?2", Sort.by("version"), releaseId, projectId).firstResult();
    }

}
