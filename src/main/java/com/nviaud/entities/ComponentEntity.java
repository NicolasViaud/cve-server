package com.nviaud.entities;

import com.fasterxml.jackson.annotation.JsonIgnore;
import io.quarkus.hibernate.reactive.panache.PanacheEntity;
import io.quarkus.panache.common.Sort;
import io.smallrye.mutiny.Uni;

import javax.persistence.*;
import java.util.List;


@Entity
@Cacheable
@Table(
        name = "component",
        indexes = @Index(unique = true, columnList = "project_id, name")
)
public class ComponentEntity extends PanacheEntity {

    @JsonIgnore
    @ManyToOne(fetch = FetchType.LAZY)
    public ProjectEntity project;

    @Column(length = 40)
    public String name;

    public String description;

    public static Uni<List<ComponentEntity>> findByProjectId(Long projectId){
        return list("project.id", Sort.by("name"), projectId);
    }

    public static Uni<ComponentEntity> findByComponentIdAndProjectIdAnd(Long componentId, Long projectId){
        return find("id = ?1 and project.id = ?2", Sort.by("name"), componentId, projectId).firstResult();
    }

}
