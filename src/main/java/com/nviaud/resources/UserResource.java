package com.nviaud.resources;

import com.nviaud.entities.ProjectEntity;
import com.nviaud.services.UserService;
import io.quarkus.security.identity.SecurityIdentity;
import io.smallrye.jwt.auth.principal.DefaultJWTCallerPrincipal;
import io.smallrye.mutiny.Uni;
import org.jboss.resteasy.reactive.NoCache;

import javax.annotation.security.RolesAllowed;
import javax.inject.Inject;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import java.util.List;

@Path("/users")
public class UserResource {

    @Inject
    UserService userService;

    @Inject
    @GET
    @Path("/me")
    @RolesAllowed("**")
    @NoCache
    public Uni<User> me() {
        return Uni.combine().all()
                .unis(userService.myName(), userService.myProjects())
                .combinedWith((name, projects) -> {
                    final User user = new User();
                    user.name = name;
                    user.projects = projects;
                    return user;
                });
    }

    public static class User {

        public String name;
        public List<ProjectEntity> projects;

    }

}
